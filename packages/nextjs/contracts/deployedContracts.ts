/**
 * This file is autogenerated by Scaffold-ETH.
 * You should not edit it manually or your changes might be overwritten.
 */
import { GenericContractsDeclaration } from "~~/utils/scaffold-eth/contract";

const deployedContracts = {
  31337: {
    AccountFactory: {
      address: "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "createAccount",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    EntryPoint: {
      address: "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "preOpGas",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "paid",
              type: "uint256",
            },
            {
              internalType: "uint48",
              name: "validAfter",
              type: "uint48",
            },
            {
              internalType: "uint48",
              name: "validUntil",
              type: "uint48",
            },
            {
              internalType: "bool",
              name: "targetSuccess",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "targetResult",
              type: "bytes",
            },
          ],
          name: "ExecutionResult",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "opIndex",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "FailedOp",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "SenderAddressResult",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "aggregator",
              type: "address",
            },
          ],
          name: "SignatureValidationFailed",
          type: "error",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "sigFailed",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "validAfter",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "validUntil",
                  type: "uint48",
                },
                {
                  internalType: "bytes",
                  name: "paymasterContext",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.ReturnInfo",
              name: "returnInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "senderInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "factoryInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "paymasterInfo",
              type: "tuple",
            },
          ],
          name: "ValidationResult",
          type: "error",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "sigFailed",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "validAfter",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "validUntil",
                  type: "uint48",
                },
                {
                  internalType: "bytes",
                  name: "paymasterContext",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.ReturnInfo",
              name: "returnInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "senderInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "factoryInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "paymasterInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "aggregator",
                  type: "address",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "stake",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "unstakeDelaySec",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct IStakeManager.StakeInfo",
                  name: "stakeInfo",
                  type: "tuple",
                },
              ],
              internalType: "struct IEntryPoint.AggregatorStakeInfo",
              name: "aggregatorInfo",
              type: "tuple",
            },
          ],
          name: "ValidationResultWithAggregation",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "factory",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "paymaster",
              type: "address",
            },
          ],
          name: "AccountDeployed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "BeforeExecution",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalDeposit",
              type: "uint256",
            },
          ],
          name: "Deposited",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "aggregator",
              type: "address",
            },
          ],
          name: "SignatureAggregatorChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalStaked",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unstakeDelaySec",
              type: "uint256",
            },
          ],
          name: "StakeLocked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "withdrawTime",
              type: "uint256",
            },
          ],
          name: "StakeUnlocked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "withdrawAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "StakeWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "paymaster",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "actualGasUsed",
              type: "uint256",
            },
          ],
          name: "UserOperationEvent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "revertReason",
              type: "bytes",
            },
          ],
          name: "UserOperationRevertReason",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "withdrawAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Withdrawn",
          type: "event",
        },
        {
          inputs: [],
          name: "SIG_VALIDATION_FAILED",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "initCode",
              type: "bytes",
            },
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "paymasterAndData",
              type: "bytes",
            },
          ],
          name: "_validateSenderAndPaymaster",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "unstakeDelaySec",
              type: "uint32",
            },
          ],
          name: "addStake",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "depositTo",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "deposits",
          outputs: [
            {
              internalType: "uint112",
              name: "deposit",
              type: "uint112",
            },
            {
              internalType: "bool",
              name: "staked",
              type: "bool",
            },
            {
              internalType: "uint112",
              name: "stake",
              type: "uint112",
            },
            {
              internalType: "uint32",
              name: "unstakeDelaySec",
              type: "uint32",
            },
            {
              internalType: "uint48",
              name: "withdrawTime",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDepositInfo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint112",
                  name: "deposit",
                  type: "uint112",
                },
                {
                  internalType: "bool",
                  name: "staked",
                  type: "bool",
                },
                {
                  internalType: "uint112",
                  name: "stake",
                  type: "uint112",
                },
                {
                  internalType: "uint32",
                  name: "unstakeDelaySec",
                  type: "uint32",
                },
                {
                  internalType: "uint48",
                  name: "withdrawTime",
                  type: "uint48",
                },
              ],
              internalType: "struct IStakeManager.DepositInfo",
              name: "info",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint192",
              name: "key",
              type: "uint192",
            },
          ],
          name: "getNonce",
          outputs: [
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "initCode",
              type: "bytes",
            },
          ],
          name: "getSenderAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
          ],
          name: "getUserOpHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "sender",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "nonce",
                      type: "uint256",
                    },
                    {
                      internalType: "bytes",
                      name: "initCode",
                      type: "bytes",
                    },
                    {
                      internalType: "bytes",
                      name: "callData",
                      type: "bytes",
                    },
                    {
                      internalType: "uint256",
                      name: "callGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "verificationGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "preVerificationGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxPriorityFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "bytes",
                      name: "paymasterAndData",
                      type: "bytes",
                    },
                    {
                      internalType: "bytes",
                      name: "signature",
                      type: "bytes",
                    },
                  ],
                  internalType: "struct UserOperation[]",
                  name: "userOps",
                  type: "tuple[]",
                },
                {
                  internalType: "contract IAggregator",
                  name: "aggregator",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
              name: "opsPerAggregator",
              type: "tuple[]",
            },
            {
              internalType: "address payable",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "handleAggregatedOps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation[]",
              name: "ops",
              type: "tuple[]",
            },
            {
              internalType: "address payable",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "handleOps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint192",
              name: "key",
              type: "uint192",
            },
          ],
          name: "incrementNonce",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "sender",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "nonce",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "callGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "verificationGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "preVerificationGas",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "paymaster",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "maxFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxPriorityFeePerGas",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct EntryPoint.MemoryUserOp",
                  name: "mUserOp",
                  type: "tuple",
                },
                {
                  internalType: "bytes32",
                  name: "userOpHash",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "contextOffset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
              ],
              internalType: "struct EntryPoint.UserOpInfo",
              name: "opInfo",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
          ],
          name: "innerHandleOp",
          outputs: [
            {
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint192",
              name: "",
              type: "uint192",
            },
          ],
          name: "nonceSequenceNumber",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "op",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "targetCallData",
              type: "bytes",
            },
          ],
          name: "simulateHandleOp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
          ],
          name: "simulateValidation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unlockStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "withdrawAddress",
              type: "address",
            },
          ],
          name: "withdrawStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "withdrawAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "withdrawAmount",
              type: "uint256",
            },
          ],
          name: "withdrawTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        addStake: "@account-abstraction/contracts/core/StakeManager.sol",
        balanceOf: "@account-abstraction/contracts/core/StakeManager.sol",
        depositTo: "@account-abstraction/contracts/core/StakeManager.sol",
        getDepositInfo: "@account-abstraction/contracts/core/StakeManager.sol",
        getNonce: "@account-abstraction/contracts/core/NonceManager.sol",
        getSenderAddress: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        getUserOpHash: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        handleAggregatedOps: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        handleOps: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        incrementNonce: "@account-abstraction/contracts/core/NonceManager.sol",
        simulateHandleOp: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        simulateValidation: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        unlockStake: "@account-abstraction/contracts/core/StakeManager.sol",
        withdrawStake: "@account-abstraction/contracts/core/StakeManager.sol",
        withdrawTo: "@account-abstraction/contracts/core/StakeManager.sol",
        deposits: "@account-abstraction/contracts/core/StakeManager.sol",
        nonceSequenceNumber: "@account-abstraction/contracts/core/NonceManager.sol",
      },
    },
    Paymaster: {
      address: "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      abi: [
        {
          inputs: [
            {
              internalType: "enum IPaymaster.PostOpMode",
              name: "mode",
              type: "uint8",
            },
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
          ],
          name: "postOp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "validatePaymasterUserOp",
          outputs: [
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "validationData",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        postOp: "@account-abstraction/contracts/interfaces/IPaymaster.sol",
        validatePaymasterUserOp: "@account-abstraction/contracts/interfaces/IPaymaster.sol",
      },
    },
    YourContract: {
      address: "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "count",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "execute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "validateUserOp",
          outputs: [
            {
              internalType: "uint256",
              name: "validationData",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        validateUserOp: "@account-abstraction/contracts/interfaces/IAccount.sol",
      },
    },
  },
  84532: {
    AccountFactory: {
      address: "0xbC99415C93b48521E2651ee9eF175dEde499B694",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "owner",
              type: "address",
            },
          ],
          name: "createAccount",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
      ],
      inheritedFunctions: {},
    },
    EntryPoint: {
      address: "0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789",
      abi: [
        {
          inputs: [
            {
              internalType: "uint256",
              name: "preOpGas",
              type: "uint256",
            },
            {
              internalType: "uint256",
              name: "paid",
              type: "uint256",
            },
            {
              internalType: "uint48",
              name: "validAfter",
              type: "uint48",
            },
            {
              internalType: "uint48",
              name: "validUntil",
              type: "uint48",
            },
            {
              internalType: "bool",
              name: "targetSuccess",
              type: "bool",
            },
            {
              internalType: "bytes",
              name: "targetResult",
              type: "bytes",
            },
          ],
          name: "ExecutionResult",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "uint256",
              name: "opIndex",
              type: "uint256",
            },
            {
              internalType: "string",
              name: "reason",
              type: "string",
            },
          ],
          name: "FailedOp",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
          ],
          name: "SenderAddressResult",
          type: "error",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "aggregator",
              type: "address",
            },
          ],
          name: "SignatureValidationFailed",
          type: "error",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "sigFailed",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "validAfter",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "validUntil",
                  type: "uint48",
                },
                {
                  internalType: "bytes",
                  name: "paymasterContext",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.ReturnInfo",
              name: "returnInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "senderInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "factoryInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "paymasterInfo",
              type: "tuple",
            },
          ],
          name: "ValidationResult",
          type: "error",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "bool",
                  name: "sigFailed",
                  type: "bool",
                },
                {
                  internalType: "uint48",
                  name: "validAfter",
                  type: "uint48",
                },
                {
                  internalType: "uint48",
                  name: "validUntil",
                  type: "uint48",
                },
                {
                  internalType: "bytes",
                  name: "paymasterContext",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.ReturnInfo",
              name: "returnInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "senderInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "factoryInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "uint256",
                  name: "stake",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "unstakeDelaySec",
                  type: "uint256",
                },
              ],
              internalType: "struct IStakeManager.StakeInfo",
              name: "paymasterInfo",
              type: "tuple",
            },
            {
              components: [
                {
                  internalType: "address",
                  name: "aggregator",
                  type: "address",
                },
                {
                  components: [
                    {
                      internalType: "uint256",
                      name: "stake",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "unstakeDelaySec",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct IStakeManager.StakeInfo",
                  name: "stakeInfo",
                  type: "tuple",
                },
              ],
              internalType: "struct IEntryPoint.AggregatorStakeInfo",
              name: "aggregatorInfo",
              type: "tuple",
            },
          ],
          name: "ValidationResultWithAggregation",
          type: "error",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "factory",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "paymaster",
              type: "address",
            },
          ],
          name: "AccountDeployed",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [],
          name: "BeforeExecution",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalDeposit",
              type: "uint256",
            },
          ],
          name: "Deposited",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "aggregator",
              type: "address",
            },
          ],
          name: "SignatureAggregatorChanged",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "totalStaked",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "unstakeDelaySec",
              type: "uint256",
            },
          ],
          name: "StakeLocked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "withdrawTime",
              type: "uint256",
            },
          ],
          name: "StakeUnlocked",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "withdrawAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "StakeWithdrawn",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: true,
              internalType: "address",
              name: "paymaster",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bool",
              name: "success",
              type: "bool",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "actualGasUsed",
              type: "uint256",
            },
          ],
          name: "UserOperationEvent",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              indexed: true,
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
            {
              indexed: false,
              internalType: "bytes",
              name: "revertReason",
              type: "bytes",
            },
          ],
          name: "UserOperationRevertReason",
          type: "event",
        },
        {
          anonymous: false,
          inputs: [
            {
              indexed: true,
              internalType: "address",
              name: "account",
              type: "address",
            },
            {
              indexed: false,
              internalType: "address",
              name: "withdrawAddress",
              type: "address",
            },
            {
              indexed: false,
              internalType: "uint256",
              name: "amount",
              type: "uint256",
            },
          ],
          name: "Withdrawn",
          type: "event",
        },
        {
          inputs: [],
          name: "SIG_VALIDATION_FAILED",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "initCode",
              type: "bytes",
            },
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "paymasterAndData",
              type: "bytes",
            },
          ],
          name: "_validateSenderAndPaymaster",
          outputs: [],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint32",
              name: "unstakeDelaySec",
              type: "uint32",
            },
          ],
          name: "addStake",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "balanceOf",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "depositTo",
          outputs: [],
          stateMutability: "payable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          name: "deposits",
          outputs: [
            {
              internalType: "uint112",
              name: "deposit",
              type: "uint112",
            },
            {
              internalType: "bool",
              name: "staked",
              type: "bool",
            },
            {
              internalType: "uint112",
              name: "stake",
              type: "uint112",
            },
            {
              internalType: "uint32",
              name: "unstakeDelaySec",
              type: "uint32",
            },
            {
              internalType: "uint48",
              name: "withdrawTime",
              type: "uint48",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "account",
              type: "address",
            },
          ],
          name: "getDepositInfo",
          outputs: [
            {
              components: [
                {
                  internalType: "uint112",
                  name: "deposit",
                  type: "uint112",
                },
                {
                  internalType: "bool",
                  name: "staked",
                  type: "bool",
                },
                {
                  internalType: "uint112",
                  name: "stake",
                  type: "uint112",
                },
                {
                  internalType: "uint32",
                  name: "unstakeDelaySec",
                  type: "uint32",
                },
                {
                  internalType: "uint48",
                  name: "withdrawTime",
                  type: "uint48",
                },
              ],
              internalType: "struct IStakeManager.DepositInfo",
              name: "info",
              type: "tuple",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "sender",
              type: "address",
            },
            {
              internalType: "uint192",
              name: "key",
              type: "uint192",
            },
          ],
          name: "getNonce",
          outputs: [
            {
              internalType: "uint256",
              name: "nonce",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "initCode",
              type: "bytes",
            },
          ],
          name: "getSenderAddress",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
          ],
          name: "getUserOpHash",
          outputs: [
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "sender",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "nonce",
                      type: "uint256",
                    },
                    {
                      internalType: "bytes",
                      name: "initCode",
                      type: "bytes",
                    },
                    {
                      internalType: "bytes",
                      name: "callData",
                      type: "bytes",
                    },
                    {
                      internalType: "uint256",
                      name: "callGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "verificationGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "preVerificationGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxPriorityFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "bytes",
                      name: "paymasterAndData",
                      type: "bytes",
                    },
                    {
                      internalType: "bytes",
                      name: "signature",
                      type: "bytes",
                    },
                  ],
                  internalType: "struct UserOperation[]",
                  name: "userOps",
                  type: "tuple[]",
                },
                {
                  internalType: "contract IAggregator",
                  name: "aggregator",
                  type: "address",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct IEntryPoint.UserOpsPerAggregator[]",
              name: "opsPerAggregator",
              type: "tuple[]",
            },
            {
              internalType: "address payable",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "handleAggregatedOps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation[]",
              name: "ops",
              type: "tuple[]",
            },
            {
              internalType: "address payable",
              name: "beneficiary",
              type: "address",
            },
          ],
          name: "handleOps",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "uint192",
              name: "key",
              type: "uint192",
            },
          ],
          name: "incrementNonce",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "bytes",
              name: "callData",
              type: "bytes",
            },
            {
              components: [
                {
                  components: [
                    {
                      internalType: "address",
                      name: "sender",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "nonce",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "callGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "verificationGasLimit",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "preVerificationGas",
                      type: "uint256",
                    },
                    {
                      internalType: "address",
                      name: "paymaster",
                      type: "address",
                    },
                    {
                      internalType: "uint256",
                      name: "maxFeePerGas",
                      type: "uint256",
                    },
                    {
                      internalType: "uint256",
                      name: "maxPriorityFeePerGas",
                      type: "uint256",
                    },
                  ],
                  internalType: "struct EntryPoint.MemoryUserOp",
                  name: "mUserOp",
                  type: "tuple",
                },
                {
                  internalType: "bytes32",
                  name: "userOpHash",
                  type: "bytes32",
                },
                {
                  internalType: "uint256",
                  name: "prefund",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "contextOffset",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preOpGas",
                  type: "uint256",
                },
              ],
              internalType: "struct EntryPoint.UserOpInfo",
              name: "opInfo",
              type: "tuple",
            },
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
          ],
          name: "innerHandleOp",
          outputs: [
            {
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
          ],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
            {
              internalType: "uint192",
              name: "",
              type: "uint192",
            },
          ],
          name: "nonceSequenceNumber",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "op",
              type: "tuple",
            },
            {
              internalType: "address",
              name: "target",
              type: "address",
            },
            {
              internalType: "bytes",
              name: "targetCallData",
              type: "bytes",
            },
          ],
          name: "simulateHandleOp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
          ],
          name: "simulateValidation",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "unlockStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "withdrawAddress",
              type: "address",
            },
          ],
          name: "withdrawStake",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              internalType: "address payable",
              name: "withdrawAddress",
              type: "address",
            },
            {
              internalType: "uint256",
              name: "withdrawAmount",
              type: "uint256",
            },
          ],
          name: "withdrawTo",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        addStake: "@account-abstraction/contracts/core/StakeManager.sol",
        balanceOf: "@account-abstraction/contracts/core/StakeManager.sol",
        depositTo: "@account-abstraction/contracts/core/StakeManager.sol",
        getDepositInfo: "@account-abstraction/contracts/core/StakeManager.sol",
        getNonce: "@account-abstraction/contracts/core/NonceManager.sol",
        getSenderAddress: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        getUserOpHash: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        handleAggregatedOps: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        handleOps: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        incrementNonce: "@account-abstraction/contracts/core/NonceManager.sol",
        simulateHandleOp: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        simulateValidation: "@account-abstraction/contracts/interfaces/IEntryPoint.sol",
        unlockStake: "@account-abstraction/contracts/core/StakeManager.sol",
        withdrawStake: "@account-abstraction/contracts/core/StakeManager.sol",
        withdrawTo: "@account-abstraction/contracts/core/StakeManager.sol",
        deposits: "@account-abstraction/contracts/core/StakeManager.sol",
        nonceSequenceNumber: "@account-abstraction/contracts/core/NonceManager.sol",
      },
    },
    Paymaster: {
      address: "0xb2A25a5245419Bbb39627374CaF23F1B7a4637Fc",
      abi: [
        {
          inputs: [
            {
              internalType: "enum IPaymaster.PostOpMode",
              name: "mode",
              type: "uint8",
            },
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "actualGasCost",
              type: "uint256",
            },
          ],
          name: "postOp",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "validatePaymasterUserOp",
          outputs: [
            {
              internalType: "bytes",
              name: "context",
              type: "bytes",
            },
            {
              internalType: "uint256",
              name: "validationData",
              type: "uint256",
            },
          ],
          stateMutability: "pure",
          type: "function",
        },
      ],
      inheritedFunctions: {
        postOp: "@account-abstraction/contracts/interfaces/IPaymaster.sol",
        validatePaymasterUserOp: "@account-abstraction/contracts/interfaces/IPaymaster.sol",
      },
    },
    YourContract: {
      address: "0x032b9ca48062ddb0c1614b82ebc8a9bd7f136eba",
      abi: [
        {
          inputs: [
            {
              internalType: "address",
              name: "_owner",
              type: "address",
            },
          ],
          stateMutability: "nonpayable",
          type: "constructor",
        },
        {
          inputs: [],
          name: "count",
          outputs: [
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [],
          name: "execute",
          outputs: [],
          stateMutability: "nonpayable",
          type: "function",
        },
        {
          inputs: [],
          name: "owner",
          outputs: [
            {
              internalType: "address",
              name: "",
              type: "address",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          inputs: [
            {
              components: [
                {
                  internalType: "address",
                  name: "sender",
                  type: "address",
                },
                {
                  internalType: "uint256",
                  name: "nonce",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "initCode",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "callData",
                  type: "bytes",
                },
                {
                  internalType: "uint256",
                  name: "callGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "verificationGasLimit",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "preVerificationGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "uint256",
                  name: "maxPriorityFeePerGas",
                  type: "uint256",
                },
                {
                  internalType: "bytes",
                  name: "paymasterAndData",
                  type: "bytes",
                },
                {
                  internalType: "bytes",
                  name: "signature",
                  type: "bytes",
                },
              ],
              internalType: "struct UserOperation",
              name: "userOp",
              type: "tuple",
            },
            {
              internalType: "bytes32",
              name: "userOpHash",
              type: "bytes32",
            },
            {
              internalType: "uint256",
              name: "",
              type: "uint256",
            },
          ],
          name: "validateUserOp",
          outputs: [
            {
              internalType: "uint256",
              name: "validationData",
              type: "uint256",
            },
          ],
          stateMutability: "view",
          type: "function",
        },
        {
          stateMutability: "payable",
          type: "receive",
        },
      ],
      inheritedFunctions: {
        validateUserOp: "@account-abstraction/contracts/interfaces/IAccount.sol",
      },
    },
  },
} as const;

export default deployedContracts satisfies GenericContractsDeclaration;
